Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-01-01T13:29:51+08:00

====== 如何在 LaTeX 中处理中文 ======
Created Sunday 01 January 2012

===== 我该安装什么发行版？ =====

* 我什么都不知道/大多数人：    TeX Live 2011 或 CTeX 套装 2.9 以后版本
* 我使用 ConTeXt：             ConTeXt Minimals
* 我还听说有XXX：              不妨自己试试

注：
安装后建议使用 __TeX Live Manager__ 或 MiKTeX Maintenance 连接 CTAN 在线更新。部分中文支持的宏包可能需要更新后才能确保正常使用。

===== 我该用什么编辑器？ =====

　　编辑器功能有简有繁，特色不一，从简单的纯文本编辑器到繁复的 Emacs，__因人而易__。基本功能有语法高亮、方便编译预览就很好了，扩充功能和定制有无限的可能。既可以使用界面友好、使用方便的专用编辑器，如 TeXWorks、Kile、WinEdt 等，或者接近所见即所得功能的 LyX；也可以使用定制性强的通用编辑器，如 Notepad++、SciTE、Vim、Emacs 等。这方面的介绍很多，一开始不妨多试几种，找到最适合自己的才是最好的。

　　另外提醒一句，编辑器只是工作的助力，不必把它看得太重。一些编辑器有极为繁杂的功能，一些编辑器常常会引来黑客们的论战（如 Emacs 与 Vim）。为工作，别为这些浪费太多精力，适用即可。

===== 我该去哪里寻找答案？ =====
0、绝对的新手，先读完一本入门读物，了解基本的知识。
1、__无论如何，先读文档__！绝大部分问题都是文档可以解决的。
2、再利用 Google 搜索，利用版面搜索。
3、清楚、聪明地提出你的问题。

===== 我应该看什么 LaTeX 读物？ =====
　这不是一个容易回答的问题，因为有许多选择，也同样有许多不合适的选择。这里只是选出一个比较好的答案。更多更详细的介绍可以在版面和网上寻找（注意时效）。近两年 TeX 的中文处理发展很快，目前没有哪本书在中文处理方面给出一个最新进展的合适综述，因而下面的介绍也不主要考虑中文处理。

一、我可以阅读英文
　　　　1、我要迅速入门：ltxprimer.pdf (LaTeX Tutorials: A Primer, India TUG)
　　　　2、我要系统学习：A Guide to LaTeX, 4th Edition, Addison-Wesley 有机械工业出版社的影印版（《LaTeX 实用教程》，e）
　　　　3、我要深入学习：要读许多书和文档，__TeXbook __是必读的
　　　　4、还有呢？　　　去读__你使用的每一个宏包__的说明文档。还有许多专题文档，如讲数学公式、图形、表格、字体等

二、我更愿意阅读中文
　　　　1、我要迅速入门：lnotes.pdf (LaTeX Notes, 1.20, Alpha Huang)
　　　　2、我要系统学习：《LaTeX2ε 完全学习手册》，胡伟
                 《LaTeX2ε 科技排版指南》，邓建松（e）
　　　　　 《LaTeX 入门与提高》第二版，陈志杰等
　　　　3、我要深入学习：《特可爱原本》（TeXbook 的中译，by xianxian。e)
　　　　4、还有呢？　　　英语，绝大多数 TeX 资料还是英文的

===== 从哪里得到各种书籍和文档？ =====
　书籍需要自己买。已出版的书籍通常都比网上流传的教程质量为高。部分经典和常用的书籍可以在网上找到电子版，包括本版的保留区和精华区一些。
　　诸宏包和一些常用的电子文档都会在 TeX 发行版里__默认安装__，除非特别指定不安装或使用的是精简文档的版本。MiKTeX 安装目录的 doc 路径，TeX Live 的 **texmf-doc** 以及** texmf-???/doc **目录都分类存放着各种文档。一般地，MiKTeX 和 TeX Live 都提供了一个叫做__ texdoc__ 的命令来直接调出文档，如在命令行下运行
    texdoc amsldoc
将得到 AMS LaTeX（包括 amsmath 等宏包）的文档；而
    texdoc symbols-a4
将得到著名的 The Comprehensive LaTeX Symbol List（一个符号大全）。进一步的用法可以通过
    texdoc texdoc
查看。此外，TeX Live 发行版还有图形界面的 texdoc GUI (texdoctk) 列出常用的部分文档，安装主目录下的 doc.html 中则包括一个所有 pdf 和 html 格式文档的列表。如果在发行版里没有安装相应的文档，可以去 CTAN 寻找下载（后详）。
　　由第三方发布的一些不大常见的文档，如印度 TUG 组织编写的 LaTeX Tutorials，__中文翻译的 beamer 文档__等，就需要自己在网络上搜索了（事实上本站就有许多）。在中文资源版、各版精华区和一些专门的 FTP 中，常常会留有许多文档。
      LaTeX 自身的一个很大的问题是__不知道用什么宏包__。而且许多人都在找大量例子-代码的对比、大而全的问题库。这里有两个常见的来源，都是英文的：
1、UK-FAQ（在系统中通常可以 newfaq 的名字用 texdoc 调出）。讲了许多常见的问题，给了许多解决问题的代码，介绍了许多实用的宏包。
2、书籍 LaTeX Companion 第二版。这是一本篇幅宏大的书，似乎没有引进到国内，只在一些图书馆内找到，但或许在网上能找到电子版（请不要向我索要）。

===== 如何使用 CTAN？ =====

     CTAN 就是 the Comprehensive TeX Archive Network，它以 HTTP 或 FTP 的形式提供大量 TeX 相关资源的下载。在 CTAN 上可以下载到最新版本的主要 TeX 发行版，如 TeX Live、MiKTeX，可以下载免费的 TeX 相关编辑器、支持工具、附件，如 LyX、WinEdt、GhostScript、TpX 等，也可以下载各种最新的 TeX 宏包。
　　CTAN 的 HTTP 主站是 http://www.ctan.org/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%BA%BF%E8%BF%9B%E8%A1%8C%E6%90%9C%E7%B4%A2%EF%BC%9BCTAN 在世界各地有许多镜象服务器，处于教育网内的有北京交通大学和厦门大学的 CTAN 镜象：
    http://mirror.bjtu.edu.cn/CTAN/
    http://mirrors.xmu.edu.cn/CTAN/
    ftp://mirrors.xmu.edu.cn/CTAN/
国内公网则有 CTeX 网站的镜象：
    ftp://ftp.ctex.org/CTAN/
    http://ftp.ctex.org/mirrors/CTAN/
此外还有许多国外的镜象服务器，列表可以在 CTAN 主站找到。

===== 如何在 LaTeX 中处理中文？请举一个例子。 =====
LaTeX 本身虽然变化不大，但中文处理的技术近两年发展飞快。现在（2011 年底）我们推荐使用__ XeTeX 引擎处理中文__，使用支持 XeLaTeX 的** ctex 宏包和文档类**（版本 0.9 以上）解决__中文版式__习惯的问题。在系统配置方面，使用 TeX Live 2011 或 CTeX 套装 2.9 以上版本。

使用上述 __XeLaTeX + xeCJK + ctex__ 的方式处理中文，可参考的文档包括：
* 　　fontspec 宏包文档（XeLaTeX 下的一般字体选择机制）
* 　　xeCJK 宏包文档（fontspec 字体选择机制的中文实现和标点特殊处理等）
* 　　ctex 宏包文档（中文版式的解决方案）

一个典型的中文支持例子（Windows 系统，用 xelatex 命令编译）：

    % 使用 Windows 六套字体（缺省的 __winfonts __选项），UTF-8 编码
    \documentclass[UTF8]{__ctexart__}
    \begin{document}
    文章内容。
    \end{document}

如果没有win字体，可以使用adobefonts选项。

注：即使不使用 xelatex 命令编译，上述代码也是一样可以用 latex 或 pdflatex 命令编译的。在使用 latex 或 pdflatex 编译时，**编码的选项**是重要的（UTF8 或 GBK）。

不使用商业中文字体的例子（Linux 系统，使用 xelatex 编译）：

    % -*- coding: utf-8 -*-
    \documentclass[UTF8,__nofonts__]{ctexart}
    \setCJKmainfont[ItalicFont={AR PL KaitiM GB}]{AR PL SungtiL GB}% 文鼎宋体和楷书
    \setCJKsansfont{WenQuanYi Zen Hei}% 文泉驿的黑体

    \begin{document}
    文章内容
    \end{document}

ctex 宏包及文档类在 Linux 系统下字体难以统一设置，进一步的信息参见：
https://code.google.com/p/ctex-kit/wiki/UnixFonts

===== 新手不建议做的几件事情： =====

* 不了解情况下复制他人代码：__代码最好都是自己写__，每句话啥意思要自己清楚，同时我也建议各位同学，给别人解决问题的时候，不要从自己文档里面咔嚓一段代码上来，最好是说明**用哪个宏包，有啥用处**，剩下的是提问者看文档，相信各位在每次帮助他人的同时更巩固了对某些常用宏包的理解。

* 有一点是特别让人不爽的，就是用 mathtype 还是什么然后生成 tex 代码，忽然有啥问题了，就划拉下来问怎么办。怎么说呢，一般有能力解决的人是不会痴迷这种代码的，好心的就让你看看 mathmode 好好学学，普通点的就直接看下一篇。在此忠告：__公式一定要自己手敲__。

* 求助模板相关问题：除了投稿，__尽量不要用现成的模板__，因为模板千差万别，良莠不齐，出了什么问题也较难定位。如果真的喜欢某个文档格式而用该模板，请确保你知道模板作者的联系方式，__直接向他提问__是最有效的解决途径，他人用这个模板而又这么巧看到了你的问题，又那么巧知道问题在哪里，又这么巧有空帮你，这就不是自己能控制的了。不用该模板的用户一般对这种问题是没有兴趣看一看的。

* __毫无基础就开始写文章__：我不是吓唬大家，不过不看点书、做点练习就想直接写书呢不是一种主流做法。花个个把礼拜学习未必使你的文章结束得晚。我经常看到一些代码中充斥着 \hskip, \quad, ~~~~, \indent 甚至无数的 \\ 等用来对齐或者换行，嗯，当时的情况就是这样的。这样写文章难道不累吗。我这里就不介绍应该如何写简练又有意义容易掌控的代码，看书吧。

* __试图修改 LaTeX 的默认表现__：比较有代表性的是浮动体等的标题等，一会儿说不要浮动了，一会儿说 figure 1.2 要改成中英文双语版而且后面的冒号要改成五角星，最麻烦的还是双栏下面一浮动咋跑下一页去了……，等等等等，不要管它们，随它们的便，这是最好的处理方式。


===== 什么知识会过时？什么不会？ =====

TeX 是**排版**__语言__，也是广泛使用的软件，并且不断在发展中；因此，总有一些东西会很快过时。作为学习 TeX 的人，免不了要看各种各样的书籍、电子文档和网络论坛上的只言片语，因此了解什么知识会迅速过时，什么知识不会是十分重要的。

最稳定的是关于 __Primitive TeX 和 Plain TeX__ 的知识，也就是 Knuth 在他的《The TeXbook 》中介绍的内容。因为 TeX 系统开发的__初衷就是稳定性__，要求今天的文档到很久以后仍可以得到完全相同的结果，因此 Knuth 限定了他的 TeX 语言和相关实现的命令、语法。这些内容许多年来就没有多少变化，在未来的一些年里也不会有什么变化。Primitive TeX 和 Plain TeX 的知识主要包括 TeX** 排版的基本算法和原理，盒子的原理，底层的 TeX 命令**等。其中技巧性的东西大多在__宏包设计__中，初学者一般不会接触到很多；而基本原理则是常常被提到的，譬如，TeX 把一切排版内容作为盒子（box）处理。

相对稳定的是关于__基本 LaTeX 2ε __的知识，也包括围绕 LaTeX 2ε 的一些__核心宏包__的知识。LaTeX 2ε 是自 1993 年以来的一个稳定的 LaTeX 版本，直到最近的一次修订（2005 年）都没有大的变动。LaTeX 的下一个计划中的版本 LaTeX 3 遥遥无期，在可预见的将来，LaTeX 2ε 不会过时。LaTeX 2ε 的知识是目前大部分 LaTeX 书籍的主体内容。关于 LaTeX 的__标准文档类__（article、report、book、letter、slide 等），关于__基本数学公式__的输入，文档的__章节层次__，__表格__和矩阵，图表__浮动体__，LR __盒子__与段落盒子……这些 LaTeX 的核心内容都是最常用的，相对稳定的。与 LaTeX 2ε 相匹配的核心宏包，如 graphics(x)、ifthen、fontenc、doc 等，也同样是相对稳定的。还有一些被非常广泛应用的宏包，如 amsmath 系列，也可以看作是相对稳定的。

简单地说，关于基本 TeX/LaTeX 的语言，都是比较稳定的。与之对应，实现或者支持 TeX/LaTeX 语言的软件，包括在 TeX/LaTeX 基础上建立的新的宏，都不大稳定。

容易过时的是关于__第三方__ LaTeX 宏包的知识、第三方 TeX 工具的知识，以及新兴 TeX 相关软件的知识等。TeX 和 LaTeX 语言是追求稳定的；但无论是宏包还是工具，作为不断更新软件，它们是不稳定的。容易过时的技术很多，而且现在广泛地出现在几乎所有 LaTeX 文档之中，因此需要特别引起注意：
　　**宏包的过时**的原因可能是宏包本身的升级换代带来了新功能或不兼容，也可能是同一功能的更新更好的宏包代替了旧的宏包。前者的典型例子比如__绘图宏包 PGF/TikZ__，现在的 2.00 版功能十分强大，和旧的 1.1x 版相差很大，和更旧的 0.x 版本则几乎完全不同；后者的典型例子比如 caption 宏包先是被更新的 caption2 宏包代替，后来 caption 宏包更新又使得 caption2 宏包完全过时。——安装更新的发行版可以避免使用过旧的宏包；__认真阅读宏包自带的文档__而不是搜索得到的陈旧片断可以避免采用过时的代码。
　　**工具过时**的主要原因也是升级换代和被其他工具替换。前者的典型例子是编辑器 WinEdt 在 5.5 以后的版本支持 UTF-8 编码，而旧版本不支持；后者的典型例子是中文字体安装工具从 GBKFonts 到 xGBKFonts 到 FontsGen 不断被取代。
　　**图形插入**是一个在 TeX 实现、宏包与外围工具方面都更新很快的东西。在过去，最常用的输出格式是 PS（PostScript）格式，因此插入的图像以 EPS 为主流。使用 Dvips 为主要输出工具，外围工具有 GhostScript、bmeps 等等，相关宏包有 graphics 等，相关文档如《LaTeX2e 插图指南》。但凡提及“LaTeX 只支持 EPS 图形”的，就是这个过时的时代的产物。事实上 TeX/LaTeX __并不限定任何图形格式__，只不过是当时的输出格式（PS）和工具（Dvips）对 EPS 情有独钟而已。后来 PDF 格式成为主流，pdfTeX、DVIPDFM、DVIPDFMx、XeTeX 等工具则主要支持 PDF、PNG、JPG 格式的图形，涉及一系列工具如 ImageMagick、ebb 等。
　　值得特别提出注意的就是，__中文处理__也一起是更新迅速、容易过时的部分。而且因为中文处理一直没有一个“官方”的“标准”做法，软件、工具、文档以及网上纷繁的笔记也就显得相当混乱。从八十年代开始的 CCT 系统、天元系统，到后来的 CJK 方式，到__近来的 XeTeX、LuaTeX 方式__，中文处理的原理、软件、宏包、配置方式等都在不断变化中。曾几何时天元、CCT 是中文 TeX 软件的代名词；五六年前的书籍尚在说 CJK 不成熟，CCT 是主流；两三年前出版的书籍却在说 CCT 已成为过去，CJK 成为主流；现在我们推荐却是 XeTeX；或许过不久又成为 LuaTeX 处理中文的天下……而且新方法确实也越来越简单、越来越直接了。是的，对此我们毫无办法，只有跟随潮流。	
