Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-04T21:12:20+08:00

====== 模块化程序设计方法的指导思想 ======
Created Thursday 04 August 2011

===== 模块化程序设计方法的指导思想： =====
如果待解决的问题比较简单，所编制的程序又不大时，就可以将整个程序放在一个模块中。但对大而复杂的设计任务，不可能由1个人用1个程序来实现。
为了解决这些问题，**必须采用自顶向下，逐步求精的模块化和结构化的设计方法（自顶向下，逐步求精是相对于问题功能划分而言的；结构化是相对于对于一个可实现的底层模块的编程方法而言）**，即__将一个大而复杂的设计任务按其需要实现的主要功能分解为若干相对独立的模块，并确定好各模块之间的调用关系和参数传递方式，对其中的公共部分还可以抽出来作为独立的公用子程序模块供大家调用__，然后就可以将这些模块分配给个人，每个人在设计自己的一部分时，还可以采用自顶向下，逐步求精的方法进一步细化，分解成一些更小的模块，并__将各底层模块的功能逐步细化为一系列的处理步骤或某种程序设计语言的语句__，分别编写，调试，最后再将它们的目标模块连接装配成一个完整的整体。

===== 模块的划分和设计可参考如下规则： =====
（1）如果一个__程序段(该程序段的功能很通用)__被很多模块所公用，则它应是一个独立的模块。
（2）如果若干个程序段处理的数据是公用的，则这些程序段应放在一个模块中。
（3）若两个程序段的利用率差别很大，则应分属于两个模块。
（4）一个模块既不能过大，也不能过小。**过大则模块的通用性较差**，过小则会造成时间和空间上的浪费。
（5）力求使模块具有__通用性__，通用性越强的模块利用性越高。
（6）各模块间应在__功能上，逻辑上相互独立，尽量截然分开__，特别应避免用转移语句的模块间转来转去。
（7）各模块间的接口应该简单，要尽量减少公共符号的个数，__尽量不用共用数据存储单元__，在结构或编排上有联系的数据应放在一个模块中，以免相互影响，造成查错困难。   
（8）每个模块的结构应尽量设计成单入口，单出口的形式。这样的程序便于调试，阅读和理解且可靠性高。
