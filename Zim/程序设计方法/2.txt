Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-04T20:26:58+08:00

====== 2 ======
Created Thursday 04 August 2011

结构化程序的概念首先是从以往编程过程中无限制地使用转移语句而提出的。转移语句可以使程序的控制流程强制性的转向程序的任一处，在传统流程图中，就是用上节我们提到的"很随意"的流程线来描述这种转移功能。如果一个程序中多处出现这种转移情况，将会导致程序流程无序可寻，程序结构杂乱无章，这样的程序是令人难以理解和接受的，并且容易出错。尤其是在实际软件产品的开发中，更多的追求软件的可读性和可修改性，象这种结构和风格的程序是不允许出现的。比如：C，FORTRAN，PASCAL等等 
结构化程序设计方法主要由以下三种逻辑结构组成： 
1)顺序结构：顺序结构是一种线性、有序的结构，它依次执行各语句模块。 
2)循环结构：循环结构是重复执行一个或几个模块，直到满足某一条件为止。 
3)选择结构：选择结构是根据条件成立与否选择程序执行的通路。 
**采用结构化程序设计方法，程序结构清晰，易于阅读、测试、排错和修改。由于每个模块执行单一功能，模块间联系较少，使程序编制比过去更简单，程序更可靠，而且增加了可维护性，每个模块可以独立编制、测试。** 


面向对象程序语言中支持的对象具有三个明显得特征： 
封装、继承、多态；而Javascript在类别和副本上并没有明显地分界。事实上，Javascript语言中所有的变量数据类型在JS中都是对象。JS总共支持4种对象：内置对象、自定义对象、浏览器程序对象和ActiveX对象。 return this只是返回该对象，以便别处引用，但并不是多出一个对象。 
所以，面向过程的程序设计中：程序=算法+数据结构 
数据结构和算法相分离的，所以，系统庞大后，它的控制、移植、重用就成了问题。 
而在面向对象的程序设计中： 
对象=数据结构+算法 
程序=对象+对象+..... 
所以克服了面向过程的设计中存在的问题。
