Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-06T21:27:50+08:00

====== const在函数中间的作用 ======
Created Saturday 06 August 2011

最近发现，在qt里面有很多类的成员函数声明中都加上了const这个限制符，不仅向看一看这个加上了const的函数和普通函数到底有什么区别，于是产生了下面这篇博文~~~     

       首先，const类型指明了变量或对象的值是不能被更新,引入目的是为了取代预编译指令（#define）。 在C++中引入const主要是为了程序的健壮性，减少程序的错误。如果我们不想修改某个常量的值，那么我们就可以把这个常量声明成const成员。同理，我们不想让某个函数修改成员变量的值，那么也可以把这个函数声明成const成员函数。这样的作用主要是为了保护数据成员。

       举个例子来说，我们有这样一个类：
01	class A
02	 {
03	 public:
04	     void area(int x,int y){length=x;width=y;}
05	     void print(){cout<<"两数相乘为:"<<length*width<<endl;}
06	 
07	 private:
08	     int length;
09	     int width;
10	 };

       对于print()函数，我们发现，其实它的作用只是把length和width的乘积打印到屏幕上，并不会修改类A里面的私有变量length和width的值，针对这一点，我们就可以把print()函数修饰成为const成员函数，即
1	void print()const{cout<<"两数相乘为:"<<length*width<<endl;}

       在这里const的作用是禁止在print()中对length和width进行修改操作。而对于area函数来说，我们就不能将其修饰成const成员函数，因为在这个函数里面，我们定义了两个整型变量x和y来改变length和width的值。如果我们非要把其声明成是const的成员函数，编译器就会报错，说这个东东是不合法的，或者说在const前面缺少;号（自我认为：报缺少；号这个错误最无语了，对找错误一点帮助也没有，囧~~）

==============================================================总结============================================================

从上面这个小例子我们就可以看出const的作用有两点：

    限制对象的成员函数改变对象的数据成员，保护了程序的健壮性和稳定性；
    如果该成员函数试图去修改对象的数据成员时，编译器就会提示错误，从而达到帮助我们寻找错误的目的。
