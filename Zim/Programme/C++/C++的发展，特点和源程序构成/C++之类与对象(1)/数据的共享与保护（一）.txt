Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-07T10:05:16+08:00

====== 数据的共享与保护（一） ======
Created Sunday 07 August 2011

1 class X { 
 2     private:
 3         int m;
 4 } // 声明X类
 5 __/* 类的作用域 */__
 6 /*-----------------------访问数据成员---------------------*/
 7 X x; // 定义x对象
 8 x.m ; // 访问对象成员
 9__ X::m; // 访问类的静态成员__
10 ptr->m; // ptr是指向类X的一个对象的指针，可访问数据成员
11 
12 // 如果对象的生存期与函数的运行期相同，则称它具有__静态生存期__：
13 static int i; // 局部作用域中静态变量的特点是他不会随着函数的每次调用而产生一个副本，也不会随着函数的返回而失效。
14 // 动态生存期对象也称为局部生存期对象，它诞生于声明点，结束于声明所在的块执行完毕之时
15 // 类的静态数据成员是用来__描述类属性__的，它不属于任何一个对象，静态数据成员具有静态生存期，用法是“__类名::标识符__”。

__//类的静态数据成员必须在类定义之外在加以定义，是因为需要以这种方式专门为他们分配空间。__
16 class Point{
17     public:
18         ....
19     private:
20         static int count;
21 };
22 
23 int Point::count=0;  __//静态数据成员的初始化__
24 
25 // __静态函数成员可以通过类名或对象名来调用__，而非静态函数成员只能通过对象名来调用
26 
27 class A{
28     public:
29         static void f(A a);  // 静态函数成员
30     private:
31         int x;
32 };
33 void A::f(A a) {
34     cout<<x;
35     cout<<a.x;
36 }
