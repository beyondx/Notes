Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-06T15:17:03+08:00

====== 指针和引用 ======
Created Saturday 06 August 2011

★ 相同点：  经典评论。
1. 都是地址的概念；
指针指向一块内存，它的内容是所指内存的地址；引用是某块内存的__别名__。

★ 区别：
1. 指针是一个实体，而引用仅是个别名；
2. 引用使用时无需__解引用__(*)，指针需要解引用；
3. 引用只能在定义时被__初始化一次，之后不可变；指针可变__；
4. 引用没有 const，指针有 const；
5.__ 引用不能为空__，指针可以为空；
eg.  int &a;   //这是错误的，引用在定义时必须初始化。

6. “sizeof 引用”得到的是__所指向的变量(对象)的大小__，而“sizeof 指针”得到的是指针本身(所指向的变量或对象的地址)的大小；
7. 指针和引用的自增(++)运算意义不一样；
8.从内存分配上看：程序为指针变量分配内存区域，而__引用不需要分配内存区域__。

所以说：__引用不是一个变量而只是一个别名__，声明一个引用，不是新定义了一个变量，它只表示该引用名是目标变量名的一个别名，它本身__不是一种数据类型__，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。&ra与&a相等。。

引用的创建和销毁并__不会__调用类的拷贝构造函数

如果你使用一个变量并让它指向一个对象，但是该变量在某些时候也可能不指向任何对象，这时你应该把变量声明为__指针__，因为这样你可以赋空值给该变量。相反，如果变量肯定指向一个对象，例如你的设计不允许变量为空，这时你就可以把变量声明为引用。

　__不存在指向空值的引用__这个事实意味着使用引用的代码效率比使用指针的要高。因为在使用引用之前不需要测试它的合法性。


 总的来说，在以下情况下你应该使用指针，一是你考虑到存在不指向任何对象的可能（在这种情况下，你能够设置指针为空），二是你需要能够在不同的时刻指向不同的对象（在这种情况下，你能改变指针的指向）。如果总是指向一个对象并且一旦指向一个对象后就不会改变指向，那么你应该使用引用。
还有一种情况，就是当你重载某个操作符时，你应该使用引用。最普通的例子是操作符[]。这个操作符典型的用法是__返回一个目标对象，其能被赋值__。


