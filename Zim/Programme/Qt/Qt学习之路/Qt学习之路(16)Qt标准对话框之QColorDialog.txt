Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-10-31T21:19:06+08:00

====== Qt学习之路(16)Qt标准对话框之QColorDialog ======
Created Monday 31 October 2011

原创作品，允许转载，转载时请务必以超链接形式标明文章 原始出处 、作者信息和本声明。否则将追究法律责任。http://devbean.blog.51cto.com/448512/214164

继续来说Qt的标准对话框，这次说说QColorDialog。这是Qt提供的颜色选择对话框。
 
使用QColorDialog也很简单，Qt提供了getColor()函数，类似于QFileDialog的getOpenFileName()，可以直接获得选择的颜色。我们还是使用前面的QAction来测试下这个函数：
 
        QColor color = QColorDialog::getColor(Qt::white, this);
        QString msg = QString("r: %1, g: %2, b: %3").arg(QString::number(color.red()), QString::number(color.green()), QString::number(color.blue()));
        QMessageBox::information(NULL, "Selected color", msg);
 
不要忘记include QColorDialog哦！这段代码虽然很少，但是内容并不少。
 
第一行QColorDialog::getColor()调用了QColorDialog的__static函数getColor()__。这个函数有两个参数，第一个是QColor类型，是对话框打开时**默认选择**的颜色，第二个是它的parent。
 
第二行比较长，涉及到QString的用法。如果我没记错的话，这些用法还没有提到过，本着“有用就说”的原则，尽管这些和QColorDialog毫不相干，这里还是解释一下。QString("r: %1, g: %2, b: %3")创建了一个QString对象。我们使用了参数化字符串，也就是那些%1之类。在Java的properties文件中，字符参数是用{0}, {1}之类实现的。其实这都是一些占位符，也就是，后面会用别的字符串替换掉这些值。占位符的替换需要使用QString的arg()函数。这个函数会返回它的调用者，因此可以使用链式调用写法。它会按照顺序替换掉占位符。然后是QString::number()函数，这也是QString的一个static函数，作用就是把int、double等值换成QString类型。这里是把QColor的R、G、B三个值输出了出来。关于QString类，我们会在以后详细说明。
 
第三行就比较简单了，使用一个消息对话框把刚刚拼接的字符串输出。
 
现在就可以运行这个测试程序了。看上去很简单，不是吗？
 
QColorDialog还有一些其他的函数可以使用。
 
QColorDialog::__setCustomColor()__可以设置用户自定义颜色。这个函数有两个值，第一个是自定义颜色的索引，第二个是自定义颜色的RGB值，类型是QRgb，大家可以查阅API文档来看看这个类的使用，下面只给出一个简单的用发：
 
QColorDialog::setCustomColor(0, QRgb(0x0000FF));
 
getColor()还有一个重载的函数，签名如下:
 
QColorDialog::getColor( const QColor & initial, QWidget * parent, const QString & title, ColorDialogOptions options = 0 )
 
第一个参数initial和前面一样，是对话框打开时的默认选中的颜色；
第二个参数parent，设置对话框的父组件；
第三个参数title，设置对话框的title；
 第四个参数options，是QColorDialog::ColorDialogOptions类型的，可以设置对话框的一些属性，如是否显示Alpha值等，具体属性请查阅API文档。特别的，这些值是可以使用OR操作的。
 
QColorDialog相对简单一些，API文档也很详细，大家遇到问题可以查阅文档的哦！
