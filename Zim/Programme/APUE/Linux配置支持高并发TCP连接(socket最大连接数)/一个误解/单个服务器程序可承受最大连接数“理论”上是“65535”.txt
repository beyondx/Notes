Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-08-06T20:26:48+08:00

====== 单个服务器程序可承受最大连接数“理论”上是“65535” ======
Created Saturday 06 August 2011

一个误解: 单个服务器程序可承受最大连接数“理论”上是“65535”
   请注意，这里有两个词分别被我标记上了引号，一个是“理论”，一个是“65535”。强调“理论”这个词，是想特别明确误解者的意思：就是说，这个值是不可能被打破的，是铁板钉丁的。而65535这个数字的由来，很多人想当然地将它与port最大值联系起来。的确，TCP的端口数，最大值确实为65535。但是，这并不代表一个服务器可以接受的连接数就是这个值，很多人之所以把这两个概念搞混淆是因为对socket和port没有更深的认识和理解。我们先来回想一下服务器服务的先后过程：服务器创建监听socket- >与对外服务的端口号绑定->开始listen->客户端连接到服务器对应的port->服务器accept为新的客户端产生新的socket->基于这个新的socket与客户端交换数据。从以上流程来看，最大值为65535的“端口号”这个重要的东东，我们只用了一次，就是执行bind的时候！而以后创建的socket，说白了就是一个可以进行网络IO操作的HANDLE而已，它跟端口号的牵扯仅限bind以及作为客户端连接服务器的识别端口号的时候，一旦accept产生了socket，这个端口号，对服务器和新客户端的通信而言就不再有任何意义。而服务器可承载的连接数最大量，不就是能产生多少个客户端的socket吗？这个socket值即使与端口号无关，又何来65535的“理论”上限？我再一次地将“理论”二字用引号括起，是因为在有的操作系统中，默认的配置会将socket最大值设定为65535，但这个值是可以改的！
[/quote]
端口号仅仅是门牌地址，不能因为鸟巢体育场能容纳10万名观众就搞10万个门牌号码吧，那电话簿要多厚啊:mrgreen:
要搞也搞的是10万个座位号:em17:

一下是各种io模型的大概性能比较。
I/O   模型                           尝试数/连接成功数
block：                             7000/1008
noBlock：                         7000/4011
WSAAsyncSelect：           7000/1956
WSAEventSelect：           7000/6999
Overlapped：                   7000/5558
completion   port：         7000/7000，   50000/4997
