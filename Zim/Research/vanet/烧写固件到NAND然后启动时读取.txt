Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-08-11T18:10:24+08:00

====== 烧写固件到NAND然后启动时读取 ======
Created Saturday 11 August 2012

经过实验，板子的NOR Flash可以正常启动，但是从NAND Flash中启动失败。但是NAND Flash可以正常工作。
所以，可以将NOR Flash作为启动设备，只保留uboot(或再加上uImage)，而将其余的固件内容放到NAND中，
由uboot启动时读取到内存中。具体步骤如下：

1. **查看uboot提供的nand命令语法**
=> help nand
nand info - show available NAND devices
nand device [dev] - show or set current device
nand read - addr off|partition size
nand write - addr off|partition size
    read/write 'size' bytes starting at offset 'off'
    to/from memory address 'addr', skipping bad blocks.
nand erase [clean] [off size] - erase 'size' bytes from
    offset 'off' (entire device if not specified)
nand bad - show bad blocks
nand dump[.oob] off - dump page
nand scrub - really clean NAND erasing bad blocks (UNSAFE)
nand markbad off - mark bad block at offset (UNSAFE)
nand biterr off - make a bit error at offset (UNSAFE)

**=> nand info**  #查看nand设备信息
Device 0: NAND 32MiB 3,3V 8-bit, sector size 16 KiB

**=> nand erase  #擦出整个设备(也可以指定擦出范围)**
NAND erase: device 0 whole chip
Bad block table found at page 65504, version 0x01
Bad block table found at page 65472, version 0x01
nand_read_bbt: Bad block at 0x000a8000
nand_read_bbt: Bad block at 0x000ac000
nand_read_bbt: Bad block at 0x000b0000
nand_read_bbt: Bad block at 0x000b4000
Skipping bad block at  0x000a8000                                            
Skipping bad block at  0x000ac000                                            
Skipping bad block at  0x000b0000                                            
Skipping bad block at  0x000b4000                                            
Skipping bad block at  0x01ff0000                                            
Skipping bad block at  0x01ff4000                                            
Skipping bad block at  0x01ff8000                                            
Skipping bad block at  0x01ffc000                                            

OK
**=> nand dump 0 #dump第一个page(512Bytes)的内容，确认全为1.**
Page 00000000 dump:
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff
OOB:
        ff ff ff ff ff ff ff ff
        ff ff ff ff ff ff ff ff
**=> tftp 1000000 uImage   #将**__内核__**下载到内存中**
Speed: 100, full duplex
Using eTSEC0 device
TFTP from server 192.168.2.101; our IP address is 192.168.2.100
Filename 'uImage'.
Load address: 0x1000000
Loading: #################################################################
         #########################################
done
**Bytes transferred = 1551612 (17acfc hex)**

**=> nand write 1000000 0 $filesize    #写flash前必须要对相应区域擦出过，最后一个参数指定写入的**__字节数__**。**

NAND write: device 0 offset 0x0, size 0x17acfc
Attempt to write __non page aligned data    #Flash写入时以page为单位(即512Bytes为单位）所以写入的大小不是页对齐时会出错。__
 1551612 bytes written: ERROR

**=> nand write 1000000 0 200000**   **#指定一个比实际要写的内容稍大(可由tftp命令的最后一行输出指示)且页对齐的大小。**
NAND write: device 0 offset 0x0, size 0x200000
Skip bad block 0x000a8000
Skip bad block 0x000ac000
Skip bad block 0x000b0000
Skip bad block 0x000b4000
 2097152 bytes written: OK

=> tftp 2000000 rootfs.ext2.gz.uboot   **#将根文件系统ramdisk下载到内存中**
Speed: 100, full duplex
Using eTSEC0 device
TFTP from server 192.168.2.101; our IP address is 192.168.2.100
Filename 'rootfs.ext2.gz.uboot'.
Load address: 0x2000000
Loading: #################################################################
         #################################################################
         #################################################################
         ########################################
done
Bytes transferred = **3447604** (349b34 hex)

**=> nand write 2000000 300000 400000**
NAND write: device 0 offset 0x300000, size 0x400000
 4194304 bytes written: OK

**=> tftp c00000 mpc8315.dtb  #设备树下载到内存中**
Speed: 100, full duplex
Using eTSEC0 device
TFTP from server 192.168.2.101; our IP address is 192.168.2.100
Filename 'mpc8315.dtb'.
Load address: 0xc00000
Loading: ##
done
Bytes transferred = 20000 (4e20 hex)
=> nand write c00000 800000 100000

NAND write: device 0 offset 0x800000, size 0x100000
 1048576 bytes written: OK

=> setenv bootcmd nand read 1000000 0 200000;nand read 2000000 300000 400000;nand read c00000 800000 100000;bootm 1000000 2000000 c00000

                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
                                                                                                                                                                                                     
















































  
=> 
=> 
=> printenv                            
ramboot=setenv bootargs root=/dev/ram rw console=$consoledev,$baudrate $othbootargs;tftp $ramdiskaddr $ramdiskfile;tftp $loadaddr $bootfile;tftp $fdtaddr $fdtfile;bootm $loadaddr $ramdiskaddr $fdtr
nfsboot=setenv bootargs root=/dev/nfs rw nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip:$gatewayip:$netmask:$hostname:$netdev:off console=$consoledev,$baudrate $othbootargs;tftp $loadaddr $bootfr
bootdelay=6
baudrate=115200
loads_echo=1
ethaddr=04:00:00:00:00:0A
eth1addr=04:00:00:00:00:0B
loadaddr=500000
netdev=eth0
consoledev=ttyS0
ramdiskaddr=1000000
ramdiskfile=ramfs.83xx
fdtaddr=400000
fdtfile=mpc8315erdb.dtb
pciconfighost=yes
ethact=eTSEC0
bootargs=root=/dev/ram rw console=ttyS0,115200 ramdisk_size=65535
stdin=serial
stdout=serial
stderr=serial
filesize=4E20
fileaddr=C00000
ipaddr=192.168.2.100
serverip=192.168.2.101
bootcmd=nand read 1000000 0 2

Environment size: 915/8188 bytes
=> setenv bootcmd nand read 1000000 0 200000;nand read 2000000 300000 400000;nand read c00000 800000 100000;bootm 1000000 2000000 c00000

NAND read: device 0 offset 0x300000, size 0x400000
 4194304 bytes read: OK

NAND read: device 0 offset 0x800000, size 0x100000
 1048576 bytes read: OK
## Booting kernel from Legacy Image at 01000000 ...
   Image Name:   Linux-3.2.4-gfd2812f
   Created:      2012-08-10   7:58:18 UTC
   Image Type:   PowerPC Linux Kernel Image (gzip compressed)
   Data Size:    1551548 Bytes =  1.5 MB
   Load Address: 00000000
   Entry Point:  00000000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 02000000 ...
   Image Name:   uboot ext2 ramdisk rootfs
   Created:      2012-08-11   8:00:23 UTC
   Image Type:   PowerPC Linux RAMDisk Image (gzip compressed)
   Data Size:    3447540 Bytes =  3.3 MB
   Load Address: 00000000
   Entry Point:  00000000
   Verifying Checksum ... OK
## Flattened Device Tree blob at 00c00000
   Booting using the fdt blob at 0xc00000
   Uncompressing Kernel Image ... OK
   Loading Ramdisk to 1fbdf000, end 1ff28af4 ... OK
   Loading Device Tree to 007f8000, end 007ffe1f ... OK
Using MPC831x RDB machine description
Cannot reserve gpages without hugetlb enabled
Linux version 3.2.4-gfd2812f (geekard@kb310) (gcc version 4.7.1 (GCC) ) #4 Fri Aug 10 15:58:17 CST 2012
Found initrd at 0xdfbdf000:0xdff28af4
bootconsole [udbg0] enabled
setup_arch: bootmem
mpc831x_rdb_setup_arch()
Found FSL PCI host bridge at 0x00000000e0008500. Firmware bus number: 0->0
PCI host bridge /pci@e0008500 (primary) ranges:
 MEM 0x0000000090000000..0x000000009fffffff -> 0x0000000090000000 
 MEM 0x0000000080000000..0x000000008fffffff -> 0x0000000080000000 Prefetch
  IO 0x00000000e0300000..0x00000000e03fffff -> 0x0000000000000000
arch: exit
Zone PFN ranges:
  DMA      0x00000000 -> 0x00020000
  Normal   empty
Movable zone start PFN for each node
early_node_map[1] active PFN ranges
    0: 0x00000000 -> 0x00020000
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 130048
Kernel command line: root=/dev/ram rw console=ttyS0,115200 ramdisk_size=65535
PID hash table entries: 2048 (order: 1, 8192 bytes)
Dentry cache hash table entries: 65536 (order: 6, 262144 bytes)
Inode-cache hash table entries: 32768 (order: 5, 131072 bytes)
Memory: 513152k/524288k available (2992k kernel code, 11136k reserved, 124k data, 59k bss, 152k init)
Kernel virtual memory layout:
  * 0xfffdf000..0xfffff000  : fixmap
  * 0xfdefb000..0xfe000000  : early ioremap
  * 0xe1000000..0xfdefb000  : vmalloc & ioremap
NR_IRQS:512 nr_irqs:512 16
IPIC (128 IRQ sources) at e1000700
clocksource: timebase mult[7800001] shift[22] registered
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 512
NET: Registered protocol family 16
             
PCI: Probing PCI hardware
bio: create slab <bio-0> at 0
vgaarb: loaded
SCSI subsystem initialized
Switching to clocksource timebase
NET: Registered protocol family 2
IP route cache hash table entries: 4096 (order: 2, 16384 bytes)
TCP established hash table entries: 16384 (order: 5, 131072 bytes)
TCP bind hash table entries: 16384 (order: 4, 65536 bytes)
TCP: Hash tables configured (established 16384 bind 16384)
TCP reno registered
UDP hash table entries: 256 (order: 0, 4096 bytes)
UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
NET: Registered protocol family 1
Trying to unpack rootfs image as initramfs...
rootfs image is not initramfs (no cpio magic); looks like an initrd
Freeing initrd memory: 3368k freed
WDT driver for MPC8xxx initialized. mode:reset timeout=65535 (32 seconds)
JFFS2 version 2.2. (NAND) © 2001-2006 Red Hat, Inc.
msgmni has been set to 1008
io scheduler noop registered
io scheduler deadline registered
io scheduler cfq registered (default)
Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
serial8250.0: ttyS0 at MMIO 0xe0004500 (irq = 16) is a 16550A
console [ttyS0] enabled, bootconsole disabled
console [ttyS0] enabled, bootconsole disabled
serial8250.0: ttyS1 at MMIO 0xe0004600 (irq = 17) is a 16550A
brd: module loaded
loop: module loaded
fe000000.flash: Found 1 x16 devices at 0x0 in 16-bit bank. Manufacturer ID 0x000001 Chip ID 0x000c01
Amd/Fujitsu Extended Query Table at 0x0040
  Amd/Fujitsu Extended Query version 1.3.
number of CFI chips: 1
4 ofpart partitions found on MTD device fe000000.flash
Creating 4 MTD partitions on "fe000000.flash":
0x000000000000-0x000000100000 : "u-boot"
0x000000100000-0x000000500000 : "fs"
0x000000500000-0x000000700000 : "kernel"
0x000000700000-0x000000800000 : "dtb"
NAND device: Manufacturer ID: 0xec, Chip ID: 0x75 (Samsung NAND 32MiB 3,3V 8-bit)
Bad block table found at page 65504, version 0x01
Bad block table found at page 65472, version 0x01
nand_read_bbt: bad block at 0x0000000a8000
nand_read_bbt: bad block at 0x0000000ac000
nand_read_bbt: bad block at 0x0000000b0000
nand_read_bbt: bad block at 0x0000000b4000
6 ofpart partitions found on MTD device e0600000.flash
Creating 6 MTD partitions on "e0600000.flash":
0x000000000000-0x000000100000 : "U-Boot-NAND"
0x000000100000-0x000000900000 : "JFFS2-NAND"
0x000000900000-0x000000d00000 : "Ramdisk-NAND"
0x000000d00000-0x000001d00000 : "Reserved-NAND"
0x000001d00000-0x000001f00000 : "Kernel-NAND"
0x000001f00000-0x000002000000 : "DTB-NAND"
eLBC NAND device at 0xe0600000, bank 1
Freescale PowerQUICC MII Bus: probed
mdio_bus mdio@e0024520: error probing PHY at address 0
Freescale PowerQUICC MII Bus: probed
fsl-gianfar e0024000.ethernet: eth0: mac: 04:00:00:00:00:0a
fsl-gianfar e0024000.ethernet: eth0: Running with NAPI enabled
fsl-gianfar e0024000.ethernet: eth0: RX BD ring size for Q[0]: 256
fsl-gianfar e0024000.ethernet: eth0: TX BD ring size for Q[0]: 256
fsl-gianfar e0025000.ethernet: eth1: mac: 04:00:00:00:00:0b
fsl-gianfar e0025000.ethernet: eth1: Running with NAPI enabled
fsl-gianfar e0025000.ethernet: eth1: RX BD ring size for Q[0]: 256
fsl-gianfar e0025000.ethernet: eth1: TX BD ring size for Q[0]: 256
i2c /dev entries driver
mpc-i2c e0003000.i2c: timeout 1000000 us
rtc-ds1307 0-0068: rtc core: registered ds1339 as rtc0
TCP cubic registered
NET: Registered protocol family 17
Registering the dns_resolver key type
rtc-ds1307 0-0068: setting system clock to 2000-01-01 00:00:00 UTC (946684800)
RAMDISK: gzip image found at block 0
VFS: Mounted root (ext2 filesystem) on device 1:0.
Freeing unused kernel memory: 152k freed
Mounting /proc and /sys 
Starting the hotplug events dispatcher mdev
Setting the hostname to mpc8315erdb
Mounting filesystems
mount: mounting usbfs on /proc/bus/usb failed: No such file or directory
Starting syslogd and klogd
Running sysctl
Setting up networking on loopback device: 

