Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-06-30T21:52:56+08:00

====== 再次理解Platform 机制 ======
Created Saturday 30 June 2012

很久以前理解的Platform 和现在的理解有了差距。以前仅仅是认为Platform 是__一种方便的整体管理设备资源的机制__，现在更加深刻地认识到为什么Platform 机制对于ARM如此重要。

对于X86平台，我想没有人会在意Platform 机制，本质是因为x86 CPU和所有外设的连接，包括内存、显卡、USB主机控制器、南桥（SATA控制器、中断控制器）、PCI插槽等等，__统统是挂载到PCIe总线上__的。而对于PCIe总线，内核早已实现了__PCI设备扫描机制__，所以不需要多说废话，内核启动时都能把这些设备找到。PCIe对于x86的重要意义不仅是硬件上的，甚至上升到Ecosystem的级别。

对于SoC平台，最典型的是arm，__内部集成__这些硬件控制器，通过AMBA总线连接这些设备。但是**没有听说AMBA总线上实现了设备扫描**。这就是一个大问题。

这里先岔开话题，说说总线、设备、和驱动三个重要的数据结构。它们就像三角形的三个顶点一样密不可分。总线上有很多设备和驱动，设备有一个总线和一个驱动。一个驱动有一个或多个总线和一个或多个设备。 他们之间的纠结关系，构成了一个和谐的紧密联系的整体。只有用这样的模型，驱动才是可能是可轻易移植的（没有硬件编码），多个驱动间才不会冲突。

对于之前学ARM驱动有一个疑问，总是__直接注册__字符驱动（诸如矩阵键盘之类），没有使用platform_driver注册。直接操作硬件资源，导致有的资源只能给一个驱动使用。换一个平台就得大改驱动代码。这里我__只看见了驱动，没有看到设备，更没有看到总线__。 现在明白了，嵌入式环境比较简单，应用也特定，这么做也没什么太大影响，只是太丑陋了。上次听宋宝华老师的讲座，他直接称这种东西不配叫驱动。

这两种驱动之间有个明显的区别：__是否有probe__。有probe的才是好孩子。

ARM下也要实现总线、设备、和驱动的紧密结合，但是AMBA总线不能扫描设备，怎么办？所以就引入__一条虚拟总线Platform__。SoC里的控制器和一些外设挂载到Platform总线上，世界又和谐了。 ARM中的设备通过Platform devices注册机制注册，因为cpu和平台固定了，设备也就固定了，找个初始化文件把用到的Platform devices注册一下就好了。

对于PowerPC，Platform的概念又淡化了。因为PowerPC有__FDT–扁平设备描述树__机制。所有的Soc里的控制器都可以在dts文件里描述，这样驱动程序一样可以根据dts里的compatible 来probe。

x86除了上面说的PCIe得原因外，也可以__由PNPACPI 机制从boot firmware传递设备表到内核__。至于挂接到可以扫描的总线上的设备驱动，如PCI、USB设备，无论是x86还是ARM、PowerPC，这些设备驱动都是__有probe__的，根据vid、pid配对。官方内核里这种驱动基本上都是不需要修改驱动代码即可跨平台运行的。
