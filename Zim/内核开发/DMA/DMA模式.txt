Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2012-02-25T22:44:01+08:00

====== DMA模式 ======
Created Saturday 25 February 2012

http://baike.baidu.com/view/196502.html

DMA的英文拼写是“Direct Memory Access”，汉语的意思就是__直接内存访问__，是一种不经过CPU而直接从内存存取数据的数据交换模式。在DMA模式下，CPU只须向DMA控制器下达指令，让DMA控制器来处理数据的传送，数据传送完毕再把信息反馈给CPU，这样就很大程度上减轻了CPU资源占有率，可以大大节省系统资源。DMA模式又可以分为Single-Word DMA（单字节DMA）和Multi-Word DMA（多字节DMA）两种，其中所能达到的最大传输速率也只有16.6MB/s。

===== 目录 =====

    概念
    特点
    DMA工作原理
    示例

===== 概念 =====
　　直接存储器存取方式，主要用于快速设备和主存储器成批交换数据的场合。在这种应用中，处理问题的出发点集中到两点：一是不能丢失快速设备提供出来的数据，二是进一步减少快速设备入出操作过程中对CPU的打扰。这可以通过把这批数据的传输过程交由一块__专用的接口卡（DMA接口）__来控制，让DMA卡代替CPU控制在快速设备与主存储器之间直接传输数据，此时每传输一个数据只需一个总线周期即可。从共同使用总线的角度看，DMA和CPU成为__竞争对手关系__。当完成一批数据传输之后，快速设备还是要向CPU发一次中断请求，报告本次传输结束的同时，"请示"下一步的操作要求。

===== 特点 =====
　　__PIO（Programming I/O）__模式下硬盘和内存之间的数据传输是由CPU来控制的；而在DMA模式下，CPU只须向DMA控制器下达指令，让DMA控制器来处理数据的传送，数据传送完毕再把信息反馈给CPU，这样就很大程度上减轻了CPU资源占有率。

DMA模式与PIO模式的区别就在于，DMA模式不过分依赖CPU，可以大大节省系统资源，二者在传输速度上的差异并不十分明显。DMA模式又可以分为Single-Word DMA（单字节DMA）和Multi-Word DMA（多字节DMA）两种，其中所能达到的最大传输速率也只有16.6MB/s。

DMA 传送方式的优先级高于程序中断（PIO），两者的区别主要表现在__对CPU的干扰程度不同__。中断请求不但使CPU停下来，而且要CPU执行中断服务程序为中断请求服务，这个请求包括了对断点和现场的处理以及CPU与外设的传送，所以CPU付出了很多的代价；
DMA请求仅仅使CPU暂停一下，__不需要对断点和现场的处理__，并且是由DMA控制外设与主存之间的数据传送，无需CPU的干预，DMA只是借用了一点CPU的时间而已。
还有一个区别就是，CPU对这两个请求的响应时间不同，对中断请求一般都在__执行完一条指令的时钟周期末尾响应__，而对DMA的请求，由于考虑它的高效性，CPU在每条指令执行的__各个阶段__之中都可以让给DMA使用，是立即响应。

DMA主要由硬件来实现，此时高速外设和内存之间进行数据交换不通过CPU的控制，而是利用系统总线。DMA方式是I/O系统与主机交换数据的主要方式之一，另外还有__程序查询方式和中断方式__。

===== DMA工作原理 =====
　　DMA 是所有现代电脑的重要特色，他允许不同速度的硬件装置来沟通，而不需要依于 CPU 的大量 __中断 负载__。否则，CPU 需要从 来源 把每一片段的资料复制到 暂存器，然后把他们再次写回到新的地方。在这个时间中，CPU 对于其他的工作来说就无法使用。
　　DMA 传输重要地将一个内存区从一个装置复制到另外一个。当 CPU 初始化这个传输动作，传输动作本身是由 DMA 控制器 来实行和完成。典型的例子就是移动一个外部内存的区块到芯片内部更快的内存去。像是这样的操作并没有让处理器工作拖延，反而可以被重新排程去处理其他的工作。DMA 传输对于高效能 嵌入式系统 算法和网络是很重要的。

===== 示例 =====
　　举个例子，PC ISA DMA 控制器拥有 8 个 DMA 通道，其中的 7 个通道是可以让 PC 的 CPU 所利用。每一个 DMA 通道有一个 16位元 位址暂存器和一个 16 位元 计数暂存器。要初始化资料传输时，装置驱动程式一起设定 DMA 通道的位址和计数暂存器，以及资料传输的方向，读取或写入。然后指示 DMA 硬件开始这个传输动作。当传输结束的时候，装置就会以__中断__的方式通知 CPU。
　　__"分散-收集"__ (Scatter-gather) DMA 允许在一次单一的 DMA 处理中传输资料到多个内存区域。相当于把多个简单的 DMA 要求串在一起。再一次，这个动机是要减轻 CPU 的多次输出输入中断和资料复制任务。
　　DRQ 意为 DMA 要求；DACK 意为 DMA 确认。这些符号一般在有 DMA 功能的电脑系统硬件概要上可以看到。他们表示了介于 CPU 和 DMA 控制器之间的电子讯号传输线路。[1][2][3]
